<beans 
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:flow="http://www.springframework.org/schema/webflow-config"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
    
http://www.springframework.org/schema/webflow-config
http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <context:component-scan base-package="com.it355.*" />
    
    <!--Kako bi Hibernate mogao da se poveže na bazu podataka
    potrebno je kreirati sesiju. To radimo u sledećem
    zrnu-->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="configLocation">
            <!--Dodavanje path-a na kome se nalaze podešavanja
            za Hibernate -->
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <!-- Dodavanje path-a paketa u kome se nalaze entity
        fajlovi na osnovu kojih
        će Hibernate kreirati bazu i upisivati u nju-->
        <property name="packagesToScan">
            <list>
                <value>com.it355.hibernatecrud.entity</value>
            </list>
        </property>
    </bean>
    
    <!--Transakcija se dešava između baze i programa korišćenjem Transaction Managera koji definišemo ovde. Оn koristi sesiju koju smo definisali iznad    -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>  
    <bean id="promenaDao" class="com.it355.hibernatecrud.dao.impl.PromenaDaoImpl"/>
    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    
    <mvc:annotation-driven conversion-service="conversionService" />
    <tx:annotation-driven />
    
    <mvc:default-servlet-handler />
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    <bean id="conversionService"
          class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean
                    class="com.it355.hibernatecrud.converter.IntegerToString" /><!-- Ordinacija -->
            </set>
        </property>
    </bean>

   
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>/WEB-INF/lang/pregled</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>   
    </bean>
    <bean id="logAspect"
          class="com.it355.aspect.InterceptorLog" />
    <bean id="logPointcutAdvisor"
          class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice" ref="logAspect" />
        <property name="mappedName">
            <value>*</value>
        </property>
    </bean>
    <bean id="testServiceProxy"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames" value="terminDao" />
        <property name="interceptorNames">
            <list>
                <value>logPointcutAdvisor</value>
            </list>
        </property>
    </bean>
    <import resource="flow-definition.xml"/> 
    
</beans>
